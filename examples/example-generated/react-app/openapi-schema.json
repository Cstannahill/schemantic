{
  "openapi": "3.1.0",
  "info": {
    "title": "Code Evolution Tracker API",
    "description": "AI-powered repository analysis and pattern detection",
    "version": "1.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Comprehensive health check with service status",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/connection-test": {
      "get": {
        "summary": "Connection Test",
        "description": "Test endpoint to debug connection issues",
        "operationId": "connection_test_api_connection_test_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ip-check": {
      "get": {
        "summary": "Ip Check",
        "description": "Get the outbound IP address for Railway deployment",
        "operationId": "ip_check_api_ip_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register User",
        "description": "Register a new user",
        "operationId": "register_user_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login User",
        "description": "Login user with username and password",
        "operationId": "login_user_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login For Access Token",
        "description": "OAuth2 compatible login endpoint",
        "operationId": "login_for_access_token_api_auth_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_api_auth_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/guest": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Create Guest Session",
        "description": "Create a guest user session",
        "operationId": "create_guest_session_api_auth_guest_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get Current User Info",
        "description": "Get current user information",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/api-keys": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get User Api Keys",
        "description": "Get all API keys for the current user",
        "operationId": "get_user_api_keys_api_auth_api_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APIKeyResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Api Keys Api Auth Api Keys Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": ["Authentication"],
        "summary": "Create Api Key",
        "description": "Create/update an API key for the current user",
        "operationId": "create_api_key_api_auth_api_keys_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/api-keys/{key_id}": {
      "delete": {
        "tags": ["Authentication"],
        "summary": "Delete Api Key",
        "description": "Delete an API key",
        "operationId": "delete_api_key_api_auth_api_keys__key_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/guest/api-keys": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get Guest Api Keys",
        "description": "Get available API key providers for guest session",
        "operationId": "get_guest_api_keys_api_auth_guest_api_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": ["Authentication"],
        "summary": "Set Guest Api Keys",
        "description": "Set API keys for guest session (temporary, not stored)",
        "operationId": "set_guest_api_keys_api_auth_guest_api_keys_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestAPIKeys"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/repositories": {
      "get": {
        "tags": ["Repositories"],
        "summary": "List Repositories",
        "description": "List all repositories with pagination",
        "operationId": "list_repositories_api_repositories_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of repositories to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Maximum number of repositories to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of repositories to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of repositories to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Repositories Api Repositories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Repositories"],
        "summary": "Create Repository",
        "description": "Create a repository and start background analysis with Git cloning",
        "operationId": "create_repository_api_repositories_post",
        "parameters": [
          {
            "name": "force_reanalyze",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force re-analysis of existing repository",
              "default": false,
              "title": "Force Reanalyze"
            },
            "description": "Force re-analysis of existing repository"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryCreateWithModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Repository Api Repositories Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/submit": {
      "post": {
        "tags": ["Repositories"],
        "summary": "Submit Repository For Analysis",
        "description": "Submit a Git repository for comprehensive analysis with deep commit analysis",
        "operationId": "submit_repository_for_analysis_api_repositories_submit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositorySubmitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Submit Repository For Analysis Api Repositories Submit Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Repository",
        "description": "Get repository by ID",
        "operationId": "get_repository_api_repositories__repo_id__get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Repository Api Repositories  Repo Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}/analysis": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Repository Analysis",
        "description": "Get complete repository analysis data",
        "operationId": "get_repository_analysis_api_repositories__repo_id__analysis_get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Repository Analysis Api Repositories  Repo Id  Analysis Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}/patterns": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Repository Patterns",
        "description": "Get pattern statistics and occurrences for a repository",
        "operationId": "get_repository_patterns_api_repositories__repo_id__patterns_get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          },
          {
            "name": "include_occurrences",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Occurrences"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Repository Patterns Api Repositories  Repo Id  Patterns Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}/analysis/enhanced": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Enhanced Repository Analysis",
        "description": "Get enhanced repository analysis with security, performance, and architectural insights",
        "operationId": "get_enhanced_repository_analysis_api_repositories__repo_id__analysis_enhanced_get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Enhanced Repository Analysis Api Repositories  Repo Id  Analysis Enhanced Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}/timeline": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Repository Timeline",
        "description": "Get repository timeline",
        "operationId": "get_repository_timeline_api_repositories__repo_id__timeline_get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Repository Timeline Api Repositories  Repo Id  Timeline Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}/analyses/models": {
      "get": {
        "tags": ["Repositories"],
        "summary": "List Repository Models",
        "description": "List available analyses grouped by model for a repository",
        "operationId": "list_repository_models_api_repositories__repo_id__analyses_models_get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Repository Models Api Repositories  Repo Id  Analyses Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repo_id}/analysis/by-model": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Repository Analysis By Model",
        "description": "Get latest enhanced analyses for a repository filtered by model",
        "operationId": "get_repository_analysis_by_model_api_repositories__repo_id__analysis_by_model_get",
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AI model identifier",
              "title": "Model"
            },
            "description": "AI model identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Repository Analysis By Model Api Repositories  Repo Id  Analysis By Model Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/user/my-repositories": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get User Repositories",
        "description": "Get repositories associated with the current user",
        "operationId": "get_user_repositories_api_repositories_user_my_repositories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get User Repositories Api Repositories User My Repositories Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/repositories/user/add-repository": {
      "post": {
        "tags": ["Repositories"],
        "summary": "Add Repository To User",
        "description": "Add a repository to the user's collection and optionally start analysis",
        "operationId": "add_repository_to_user_api_repositories_user_add_repository_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "force_reanalyze",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force re-analysis of existing repository",
              "default": false,
              "title": "Force Reanalyze"
            },
            "description": "Force re-analysis of existing repository"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryCreateWithModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Repository To User Api Repositories User Add Repository Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/user/repositories/{repo_id}": {
      "delete": {
        "tags": ["Repositories"],
        "summary": "Remove Repository From User",
        "description": "Remove repository association from current user",
        "operationId": "remove_repository_from_user_api_repositories_user_repositories__repo_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/global": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Global Repositories",
        "description": "Get publicly available repositories (global repository table)",
        "operationId": "get_global_repositories_api_repositories_global_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by tag",
              "title": "Tag"
            },
            "description": "Filter by tag"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by primary language",
              "title": "Language"
            },
            "description": "Filter by primary language"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Global Repositories Api Repositories Global Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/global/popular": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Popular Repositories",
        "description": "Get most popular repositories (most analyzed)",
        "operationId": "get_popular_repositories_api_repositories_global_popular_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Popular Repositories Api Repositories Global Popular Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/global/recent": {
      "get": {
        "tags": ["Repositories"],
        "summary": "Get Recent Repositories",
        "description": "Get recently added repositories",
        "operationId": "get_recent_repositories_api_repositories_global_recent_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Recent Repositories Api Repositories Global Recent Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analysis/status": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Get Ai Status",
        "description": "Get AI service status with MongoDB integration",
        "operationId": "get_ai_status_api_analysis_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analysis/models/available": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Get Available Models",
        "description": "Get available AI models for frontend dropdown",
        "operationId": "get_available_models_api_analysis_models_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analysis/code": {
      "post": {
        "tags": ["Analysis"],
        "summary": "Analyze Code Snippet",
        "description": "Analyze a code snippet for patterns and store the result",
        "operationId": "analyze_code_snippet_api_analysis_code_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analysis/patterns": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Get All Patterns",
        "description": "Get all detected patterns across repositories",
        "operationId": "get_all_patterns_api_analysis_patterns_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analysis/patterns/{pattern_name}": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Get Pattern Details",
        "description": "Get detailed information about a specific pattern",
        "operationId": "get_pattern_details_api_analysis_patterns__pattern_name__get",
        "parameters": [
          {
            "name": "pattern_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Pattern Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analysis/insights/{repository_id}": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Get Repository Insights",
        "description": "Get AI-generated insights for a repository",
        "operationId": "get_repository_insights_api_analysis_insights__repository_id__get",
        "parameters": [
          {
            "name": "repository_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repository Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analysis/ai-models": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Get Available Ai Models",
        "description": "Get available AI models and their statistics",
        "operationId": "get_available_ai_models_api_analysis_ai_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/analysis/models/{model_id}/benchmark": {
      "post": {
        "tags": ["Analysis"],
        "summary": "Benchmark Model",
        "description": "Benchmark an AI model with test data",
        "operationId": "benchmark_model_api_analysis_models__model_id__benchmark_post",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Test Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analysis/evolution": {
      "post": {
        "tags": ["Analysis"],
        "summary": "Analyze Code Evolution",
        "description": "Analyze evolution between two code versions",
        "operationId": "analyze_code_evolution_api_analysis_evolution_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analysis/compare/{repo_id1}/{repo_id2}": {
      "get": {
        "tags": ["Analysis"],
        "summary": "Compare Repositories",
        "description": "Compare two repositories",
        "operationId": "compare_repositories_api_analysis_compare__repo_id1___repo_id2__get",
        "parameters": [
          {
            "name": "repo_id1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id1"
            }
          },
          {
            "name": "repo_id2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Id2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ollama/tunnel/status": {
      "get": {
        "tags": ["ollama-tunnel"],
        "summary": "Get Tunnel Status",
        "description": "Get the status of the current user's Ollama tunnel",
        "operationId": "get_tunnel_status_api_ollama_tunnel_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/ollama/tunnel/models": {
      "get": {
        "tags": ["ollama-tunnel"],
        "summary": "Get Tunnel Models",
        "description": "Get available models from the user's Ollama tunnel",
        "operationId": "get_tunnel_models_api_ollama_tunnel_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/ollama/tunnel/request": {
      "post": {
        "tags": ["ollama-tunnel"],
        "summary": "Send Ollama Request",
        "description": "Send a request to the user's Ollama instance via tunnel",
        "operationId": "send_ollama_request_api_ollama_tunnel_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Request Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/ollama/tunnel/all": {
      "get": {
        "tags": ["ollama-tunnel"],
        "summary": "Get All Tunnels Status",
        "description": "Get status of all active tunnels (admin endpoint)",
        "operationId": "get_all_tunnels_status_api_ollama_tunnel_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint with API information",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIKeyCreate": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "key_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key Name"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          }
        },
        "type": "object",
        "required": ["provider", "api_key"],
        "title": "APIKeyCreate"
      },
      "APIKeyResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "key_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_used": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "provider",
          "key_name",
          "created_at",
          "last_used",
          "is_active",
          "usage_count"
        ],
        "title": "APIKeyResponse"
      },
      "Body_login_for_access_token_api_auth_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_for_access_token_api_auth_token_post"
      },
      "GuestAPIKeys": {
        "properties": {
          "openai_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openai Key"
          },
          "anthropic_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anthropic Key"
          },
          "gemini_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gemini Key"
          }
        },
        "type": "object",
        "title": "GuestAPIKeys"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RepositoryCreateWithModel": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "branch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "Preferred AI model"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_private": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Private",
            "default": false
          }
        },
        "type": "object",
        "required": ["url"],
        "title": "RepositoryCreateWithModel"
      },
      "RepositorySubmitRequest": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "branch": {
            "type": "string",
            "title": "Branch",
            "default": "main"
          },
          "commit_limit": {
            "type": "integer",
            "maximum": 1000,
            "minimum": 1,
            "title": "Commit Limit",
            "default": 100
          },
          "candidate_limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Candidate Limit",
            "default": 20
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type",
            "default": "comprehensive"
          },
          "include_security_scan": {
            "type": "boolean",
            "title": "Include Security Scan",
            "default": true
          },
          "include_performance_scan": {
            "type": "boolean",
            "title": "Include Performance Scan",
            "default": true
          },
          "include_architectural_scan": {
            "type": "boolean",
            "title": "Include Architectural Scan",
            "default": true
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "force_reanalyze": {
            "type": "boolean",
            "title": "Force Reanalyze",
            "default": false
          }
        },
        "type": "object",
        "required": ["url"],
        "title": "RepositorySubmitRequest"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "is_guest": {
            "type": "boolean",
            "title": "Is Guest",
            "default": false
          }
        },
        "type": "object",
        "required": ["access_token", "token_type", "user_id", "username"],
        "title": "Token"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["username", "email", "password"],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "UserLogin"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_guest": {
            "type": "boolean",
            "title": "Is Guest"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "full_name",
          "is_active",
          "is_guest",
          "created_at",
          "last_login"
        ],
        "title": "UserResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/auth/token"
          }
        }
      }
    }
  }
}
